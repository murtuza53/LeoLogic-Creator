// DO NOT EDIT, this file is generated by Firebase Studio
'use server';
import { initializeApp, getApps, getApp, App } from 'firebase-admin/app';
import { getFirestore, FieldValue } from 'firebase-admin/firestore';

// Note: This file is now using the Firebase Admin SDK as it's a server-side file.
// Client-side Firebase logic is handled in src/firebase/index.ts

let app: App;
if (!getApps().length) {
  // This is the correct way for hosted environments like Vercel or App Hosting
  // to automatically discover credentials.
  app = initializeApp();
} else {
  app = getApp();
}

const db = getFirestore(app);

const CONTACTS_COLLECTION = 'contacts';
const USERS_COLLECTION = 'users';


export type Feature = 'smartProduct' | 'aiMath' | 'qrGenerator' | 'ocr' | 'mergePdf' | 'imageExcel' | 'imageToWebp' | 'imgRemoveBg' | 'imgChangeBg' | 'resizeCropImage' | 'logoMaker' | 'pdfCompress' | 'benefitPay' | 'bmiCalculator' | 'fitnessMentor' | 'splitPdf' | 'bmrCalculator' | 'weightLoss' | 'scientificCalculator' | 'unitConverter' | 'resizeImage';

export type ContactMessage = {
  name: string;
  email: string;
  subject?: string;
  message: string;
};

export type UserProfile = {
  name: string;
  email: string;
};

export async function createUserProfile(userId: string, data: UserProfile): Promise<void> {
  const userRef = db.collection(USERS_COLLECTION).doc(userId);
  await userRef.set({
    ...data,
    createdAt: FieldValue.serverTimestamp(),
  });
}

export async function saveContactMessage(message: ContactMessage): Promise<void> {
    await db.collection(CONTACTS_COLLECTION).add({
      ...message,
      createdAt: FieldValue.serverTimestamp(),
    });
}
